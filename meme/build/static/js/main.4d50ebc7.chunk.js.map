{"version":3,"sources":["components/MemeGenerator.js","components/Header.js","App.js","index.js"],"names":["MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImg","allMemeImage","handleChange","bind","assertThisInitialized","handleSubmit","_this2","fetch","then","response","json","memes","data","setState","e","_e$target","target","name","value","defineProperty","preventDefault","randomNumber","Math","floor","random","length","randomMemeImg","url","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","src","alt","Component","Header","App","components_Header","components_MemeGenerator","ReactDOM","render","src_App","document","getElementById"],"mappings":"sPA0EeA,cAtEX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,aAAc,IAElBX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KATXA,mFAYM,IAAAgB,EAAAb,KACfc,MAAM,qCACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAY,IACPE,EAASF,EAASG,KAAlBD,MACPL,EAAKO,SAAS,CACVZ,aAAaU,2CAKZG,GAAE,IAAAC,EACWD,EAAEE,OAAjBC,EADIF,EACJE,KAAMC,EADFH,EACEG,MACbzB,KAAKoB,SAALtB,OAAA4B,EAAA,EAAA5B,CAAA,GACK0B,EAAOC,yCAIHJ,GACTA,EAAEM,iBACF,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAU/B,KAAKI,MAAMI,aAAawB,QACjEC,EAAgBjC,KAAKI,MAAMI,aAAaoB,GAAcM,IAC5DlC,KAAKoB,SAAS,CACVb,UAAU0B,qCAMd,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYC,SAAUvC,KAAKY,cACnCuB,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLhB,KAAK,UACLiB,YAAY,WACZhB,MAAOzB,KAAKI,MAAMC,QAClBqC,SAAU1C,KAAKS,eAEnB0B,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLhB,KAAK,aACLiB,YAAY,cACZhB,MAAOzB,KAAKI,MAAME,WAClBoC,SAAU1C,KAAKS,eAEnB0B,EAAAC,EAAAC,cAAA,sBAERF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKM,IAAK3C,KAAKI,MAAMG,UAAWqC,IAAI,MACpCT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOtC,KAAKI,MAAMC,SAChC8B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUtC,KAAKI,MAAME,qBAhE3BuC,aCWbC,MAZf,WACI,OACIX,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OACIM,IAAI,iEACJC,IAAI,aAERT,EAAAC,EAAAC,cAAA,6BCOGU,MAXf,WACE,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACW,EAAD,OAEAb,EAAAC,EAAAC,cAACY,EAAD,QCLRC,IAASC,OAAOhB,EAAAC,EAAAC,cAACe,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4d50ebc7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nclass MemeGenerator extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImage: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const {memes} = response.data\r\n            this.setState({\r\n                allMemeImage:memes\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange(e){\r\n        const {name, value} = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n        const randomNumber = Math.floor(Math.random()* this.state.allMemeImage.length)\r\n        const randomMemeImg = this.state.allMemeImage[randomNumber].url\r\n        this.setState({\r\n            randomImg:randomMemeImg\r\n        })\r\n    }\r\n\r\n\r\n    render () {    \r\n        return(\r\n            <div className=\"container\">\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"topText\"\r\n                            placeholder=\"Top text\"\r\n                            value={this.state.topText}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"bottomText\"\r\n                            placeholder=\"Bottom text\"\r\n                            value={this.state.bottomText}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button>Gen</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <img src={this.state.randomImg} alt=\" \"/>\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react';\r\n\r\nfunction Header (){\r\n    return(\r\n        <header >\r\n            <img \r\n                src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" \r\n                alt=\"Problem>\"\r\n            />\r\n            <p>Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react';\nimport MemeGenerator from './components/MemeGenerator'\nimport Header from './components/Header'\n\n\nfunction App () {\n  return(\n    <div >\n      <div className=\"background\">\n        <Header />\n      </div>\n        <MemeGenerator/>\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}